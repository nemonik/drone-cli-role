---
# tasks file for drone-cli

# Copyright (C) 2020 Michael Joseph Walsh - All Rights Reserved
# You may use, distribute and modify this code under the
# terms of the the license.
#
# You should have received a copy of the license with
# this file. If not, please email <mjwalsh@nemonik.com>

- name: is drone cli installed?
  stat: 
    path=/usr/local/bin/drone
  register: drone_cli_installed
  tags:
    - drone-cli

- name: set cache_path to /temp if not set
  set_fact:
    cache_path: /tmp
  when:
    - cache_path is not defined
  tags:
    - drone-cli

- name: install drone cli
  block:
  - name: create {{ cache_path }} if it doesn't exist
    shell: |
      if [[ "windows" == "{{ host_os | default('') }}" && "{{ cache_path }}" != "/tmp" ]]; then
        sudo su
      fi
      mkdir -p {{ cache_path }}
    when:
      - cache_path is defined
      - cache_path != '/tmp'
    args:
      executable: /bin/bash 
   
  - name: is drone archive cached?
    stat:
      path: "{{cache_path}}/drone_linux_amd64.tar.gz"
    register: archive_cached

  - debug:
     msg: "{{ archive_cached }}"

  - debug:
     msg: "{{ not archive_cached.stat.exists }}"

  # Ignore `[WARNING]: Consider using get_url or uri module rather than running
  # wget` when running as the URL is a redirect, so Ansible chokes using its
  # default modules to retrieve.
  - name: cache https://github.com/drone/drone-cli/releases/download/{{ drone_cli_version }}/drone_linux_amd64.tar.gz to {{cache_path}}
    shell: |
      if [[ "windows" == "{{ host_os | default('') }}"  && "{{ cache_path }}" != "/tmp" ]]; then
         sudo su
      fi
      rm -f {{ cache_path }}/drone_linux_amd64.tar.gz
      wget -q https://github.com/drone/drone-cli/releases/download/{{ drone_cli_version }}/drone_linux_amd64.tar.gz --directory-prefix {{cache_path}}
    args:
      executable: /bin/bash
    retries: "{{ default_retries }}"
    delay: "{{ default_delay }}"
    register: result
    until: result is succeeded
    when: not archive_cached.stat.exists

  - name: install drone cli binary release
    become: yes
    unarchive:
      src: "{{ cache_path }}/drone_linux_amd64.tar.gz"
      dest: /usr/local/bin

  - name: ensure "export PATH=/usr/local/bin:$PATH" is absent from /etc/profile
    become: yes
    lineinfile:
      dest: /etc/profile
      regexp: "^export PATH=/usr/local/bin:$PATH"
      state: absent

  - name: ensure "export PATH=/usr/local/bin:$PATH" is in /etc/profile
    become: yes
    lineinfile:
      dest: /etc/profile
      line: export PATH=/usr/local/bin:$PATH
      insertafter: EOF
  when: drone_cli_installed.stat.exists == False
  tags:
    - drone-cli
